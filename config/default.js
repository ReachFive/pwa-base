/*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
/* eslint-disable @typescript-eslint/no-var-requires */
require('dotenv').config()
require('dotenv').config({path: '.env.local', override: true})
const sites = require('./sites.js')
module.exports = {
    reach5: {
        SLAS_CALLBACK_ENDPOINT: '/idp-callback',
        REACH5_DOMAIN: process.env.REACH5_DOMAIN,
        REACH5_CLIENT_ID: process.env.REACH5_CLIENT_ID,
        REACH5_CLIENT_SECRET: process.env.REACH5_CLIENT_SECRET
    },
    app: {
        //if you want to enable the debug mode to show user data in frontend
        debugMode: process.env.DEBUG_MODE === 'true',
        // Customize how your 'site' and 'locale' are displayed in the url.
        url: {
            // Determine where the siteRef is located. Valid values include 'path|query_param|none'. Defaults to: 'none'
            // site: 'none',
            // Determine where the localeRef is located. Valid values include 'path|query_param|none'. Defaults to: 'none'
            locale: 'none'
            // This boolean value dictates whether or not default site or locale values are shown in the url. Defaults to: false
            // showDefaults: true
        },
        // The default site for your app. This value will be used when a siteRef could not be determined from the url
        defaultSite: process.env.siteId,
        login: {
            social: {
                enabled: true,
                idps: ['google', 'reach_five_slas', 'reach_five']
            }
        },
        // Provide aliases for your sites. These will be used in place of your site id when generating paths throughout the application.
        // siteAliases: {
        //     RefArch: 'us'
        // },
        // The sites for your app, which is imported from sites.js
        sites,
        // Commerce api config
        commerceAPI: {
            proxyPath: '/mobify/proxy/api',
            parameters: {
                clientId: process.env.clientId,
                organizationId: process.env.organizationId,
                shortCode: process.env.shortCode,
                siteId: process.env.siteId,
                // clientSecret, to make b64 to call session
                clientSecret: process.env.PWA_KIT_SLAS_CLIENT_SECRET
            }
        },
        // Einstein api config
        einsteinAPI: {
            host: 'https://api.cquotient.com',
            einsteinId: '',
            siteId: '',
            // Flag Einstein activities as coming from a production environment.
            // By setting this to true, the Einstein activities generated by the environment will appear
            // in production environment reports
            isProduction: false
        }
    },
    // This list contains server-side only libraries that you don't want to be compiled by webpack
    externals: [],
    // Page not found url for your app
    pageNotFoundURL: '/page-not-found',
    // Enables or disables building the files necessary for server-side rendering.
    ssrEnabled: true,
    // This list determines which files are available exclusively to the server-side rendering system
    // and are not available through the /mobify/bundle/ path.
    ssrOnly: ['ssr.js', 'ssr.js.map', 'node_modules/**/*.*'],
    // This list determines which files are available to the server-side rendering system
    // and available through the /mobify/bundle/ path.
    ssrShared: [
        'static/ico/favicon.ico',
        'static/robots.txt',
        '**/*.js',
        '**/*.js.map',
        '**/*.json'
    ],
    // Additional parameters that configure Express app behavior.
    ssrParameters: {
        ssrFunctionNodeVersion: '20.x',
        proxyConfigs: [
            {
                host: process.env.sandBoxHost,
                path: 'api'
            },
            {
                host: process.env.sandBoxHostOcapi,
                path: 'ocapi'
            },
            {
                host: process.env.REACH5_DOMAIN,
                path: 'reach5'
            }
        ]
    }
}
